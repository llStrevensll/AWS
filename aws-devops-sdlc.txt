install CLI
https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-install.html

cli aws  v2
https://docs.aws.amazon.com/cli/latest/userguide/install-cliv2.html
C:\Program Files\Amazon\AWSCLIV2

aws -


aws console:
IAM
   Users
	Security credentials
	  Create access key


configure:
aws configure
https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-quickstart.html

C:\Users\USERNAME\.aws\credentials on Windows.

~/.aws/config on Linux or macOS, 


$ aws configure
AWS Access Key ID [None]: AKIAIOSFODNN7EXAMPLE
AWS Secret Access Key [None]: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
Default region name [None]: us-west-2
Default output format [None]: json

Comment:
https://stackoverflow.com/questions/43217469/how-do-you-comment-out-lines-in-aws-cli-config-and-credentials-files#:~:text=1%20Answer&text=You%20can%20comment%20lines%20by%20using%20the%20%23%20character%2C%20e.g.


=============================
CodeCommit

https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-ssh-windows.html



ssh-keygen
   C:\Users\user/.ssh/id_rsa_aws_educate


aws console:
IAM
   Users
	Security credentials
	  Upload ssh key

//edit config
Host git-codecommit.*.amazonaws.com
  User <id_ssh_codecommit>
  IdentityFile ~/.ssh/id_rsa_aws_ss


ssh git-codecommit.us-east-2.amazonaws.com


git clone ssh://git-codecommit.us-east-1.amazonaws.com/v1/repos/my_demoaws

git add .
git commit -m ""
git push

--
https://www.atlassian.com/git/tutorials/using-branches
--
git checkout -b my-feature

git add .
git commit -m ""
git push

git push --set-upstream origin my-feature

create pull request
	Destination:master       Source:my-feature	Compare
 

merge strategy

Fast forward merge
git merge --ff-only
 Merges the brances and moves the destination branch pointer to the tip
 of the source branch. This is the default merge strategy in git

Squash and merge
git merge --squash
Combines all commits from the source branch into a single merge commit in the destination
branch

3-way merge
git merge --no-ff
Creates a merge commit and adds individual source commits to the destination branch

--
check delete source branch

--
Securing the repository and branches
https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control.html#auth-and-access-control-iam-access-control-identity-based
https://docs.aws.amazon.com/codecommit/latest/userguide/how-to-conditional-branch.html

create inline policie - json
{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Deny",
            "Action": [
                "codecommit:GitPush",
                "codecommit:DeleteBranch",
                "codecommit:PutFile",
                "codecommit:MergeBranchesByFastForward",
                "codecommit:MergeBranchesBySquash",
                "codecommit:MergeBranchesByThreeWay",
                "codecommit:MergePullRequestByFastForward",
                "codecommit:MergePullRequestBySquash",
                "codecommit:MergePullRequestByThreeWay"
            ],
            "Resource": "arn:aws:codecommit:us-east-2:111111111111:MyDemoRepo",
            "Condition": {
                "StringEqualsIfExists": {
                    "codecommit:References": [
                        "refs/heads/main", 
                        "refs/heads/prod"
                     ]
                },
                "Null": {
                    "codecommit:References": "false"
                }
            }
        }
    ]
}


git push
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 16 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 359 bytes | 359.00 KiB/s, done.
Total 3 (delta 1), reused 0 (delta 0), pack-reused 0
Access denied: You don't have permission to push changes to this branch.
To ssh://git-codecommit.us-east-1.amazonaws.com/v1/repos/my_demoaws
 ! [remote rejected] master -> master (You don't have permission to push changes to this branch.)
error: failed to push some refs to 'ssh://git-codecommit.us-east-1.amazonaws.com/v1/repos/my_demoaws'



--
Notification
aws-codecommit - settings
  create notification rule
  
  create trigger

Amazon SNS
{
  "Version": "2008-10-17",
  "Statement": [
    {
      "Sid": "CodeNotification_publish",
      "Effect": "Allow",
      "Principal": {
        "Service": "codestar-notifications.amazonaws.com"
      },
      "Action": "SNS:Publish",
      "Resource": "arn:aws:sns:us-east-1:1111111:codecommit-notifications-test"
    }
  ]
}


---
aws cloudwatch
Events
	rules

{
  "source": [
    "aws.codecommit"
  ],
  "detail-type": [
    "CodeCommit Repository State Change"
  ]
}

---
create Lambda

add trigger
  CodeCommit
    all repository events
    all branches


https://docs.aws.amazon.com/codecommit/latest/userguide/how-to-notify-lambda.html
python:

import json
import boto3

codecommit = boto3.client('codecommit')

def lambda_handler(event, context):
    #Log the updated references from the event
    references = { reference['ref'] for reference in event['Records'][0]['codecommit']['references'] }
    print("References: "  + str(references))
    
    #Get the repository from the event and show its git clone URL
    repository = event['Records'][0]['eventSourceARN'].split(':')[5]
    try:
        response = codecommit.get_repository(repositoryName=repository)
        print("Clone URL: " +response['repositoryMetadata']['cloneUrlHttp'])
        return response['repositoryMetadata']['cloneUrlHttp']
    except Exception as e:
        print(e)
        print('Error getting repository {}. Make sure it exists and that your repository is in the same region as this function.'.format(repository))
        raise e

click in deploy to update de code in lambda function

test
template codecommit-repository
event name

view log in cloudwatch

============
CodeBuild
https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html

Create build project
Source provider: AWS CodeCommit
S.O: linux
standrad
image: standard:1.0

---
Code build example:

version: 0.2

env:
  variables:
    JAVA_HOME: "/usr/lib/jvm/java-8-openjdk-amd64"
  parameter-store:
    LOGIN_PASSWORD: /CodeBuild/dockerLoginPassword

phases:
  install:
    commands:
      - echo Entered the install phase...
      - apt-get update -y
      - apt-get install -y maven
    finally:
      - echo This always runs even if the update or install command fails 
  pre_build:
    commands:
      - echo Entered the pre_build phase...
      - docker login -u User -p $LOGIN_PASSWORD
    finally:
      - echo This always runs even if the login command fails 
  build:
    commands:
      - echo Entered the build phase...
      - echo Build started on `date`
      - mvn install
    finally:
      - echo This always runs even if the install command fails
  post_build:
    commands:
      - echo Entered the post_build phase...
      - echo Build completed on `date`

reports:
  arn:aws:codebuild:your-region:your-aws-account-id:report-group/report-group-name-1:
    files:
      - "**/*"
    base-directory: 'target/tests/reports'
    discard-paths: no
  reportGroupCucumberJson:
    files:
      - 'cucumber/target/cucumber-tests.xml'
    discard-paths: yes
    file-format: CUCUMBERJSON # default is JUNITXML
artifacts:
  files:
    - target/messageUtil-1.0.jar
  discard-paths: yes
  secondary-artifacts:
    artifact1:
      files:
        - target/artifact-1.0.jar
      discard-paths: yes
    artifact2:
      files:
        - target/artifact-2.0.jar
      discard-paths: yes
cache:
  paths:
    - '/root/.m2/**/*'

---
https://docs.aws.amazon.com/codebuild/latest/userguide/welcome.html

samples:
https://docs.aws.amazon.com/codebuild/latest/userguide/samples.html
https://docs.aws.amazon.com/codebuild/latest/userguide/sample-docker.html

version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...          
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG      
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG

Environment variables:
https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-env-vars.html
- printenv

iam
 Roles codebuild-MyWebAppCodeBuild-service-role
   attach: AmazonSSMReadOnlyAccess

System Manager
 Parameter Store
  name:/Prod/DbPassword

CodeBuild
 Startbuild with overrides
  Environment variables override
Name: DB_URL    Value:my-db-url    Type:PlainText
Name: DB_PASSWORD  Value:/Prod/DbPassword    Type:Parameter

----
Artifacts

buildspec.yml
artifacts:
  files:
    - '**/*'
  name: myname-$(date +%Y-%m-%d)

Edit Artifacts
Amazon s3
 - select bucket

-----
https://docs.aws.amazon.com/codebuild/latest/userguide/auth-and-access-control-iam-access-control-identity-based.html
Cloud watch logs, metrics
Rules
  Schedule			OR   		Event Pattern
	every 1 hour					ServiceName: CodeBuild
							EventType: CodeBuild Build State Change
   Target
 	CodeBuildProject
	  ARN: arn:aws:codebuild:region-ID:account-ID:project/project-name
      


Cloud watch events


---
https://aws.amazon.com/es/blogs/devops/
https://aws.amazon.com/es/blogs/devops/validating-aws-codecommit-pull-requests-with-aws-codebuild-and-aws-lambda/
Pull request



-------
Create EC2 Instance and install agent to CodeDeploy

sudo yum update -y
sudo yum install -y ruby wget
wget https://aws-codedeploy-us-east-1.s3.us-east-1.amazonaws.com/latest/install
chmod +x ./install
sudo ./install auto
sudo service codedeploy-agent status


AWS Code Deploy
create Application

Create Deployment Group //(set of ec2 instances)

--
go to iam and create CodeDeploy Role
--
Service role
  Enter a service role
  CodeDedploy

Deployment type
  In-place   
Updates the instances in the deployment group with the latest application revisions. 
During a deployment, each instance will be briefly taken offline for its update

  or  Blue/Green
Replaces the instances in the deployment group with new instances and deploys
the latest application revision to them. After instances in the replacement 
environment are registered with a load balancer, 
instances from the original environment are deregistered and can be terminated.


Environment configuration
  Amazon EC2 instances  - Tag Group
  key Environment      Value Development


Deployment settings
 CodeDeployDefaultAllAtOnce

Load balancer


*Create deployment


s3 bucket, it's necesary create s3 bucket: 
https://awscli.amazonaws.com/v2/documentation/api/latest/reference/s3/mb.html

https://docs.aws.amazon.com/cli/latest/userguide/cli-configu
re-profiles.html
aws configure --profile aws-devops

aws s3 mb s3://aws-devops-strevens --region us-east-1 --profile aws-devops
aws s3api put-bucket-versioning --bucket aws-devops-strevens --versioning-configuration Status=Enabled --region us-east-1 --profile aws-devops

In appspec.yml
aws deploy push --application-name CodeDeployDemo --s3-location s3://aws-devops-strevens/codedeploy-demo/app.zip --ignore-hidden-files --region us-east-1 --profile aws-devops


Revision location
  Copy and paste the Amazon S3 bucket where your revision is stored
Create
---
Deployment lifecycle events
  View Events

go to ec2 instance - add http protocol, port 80, in security group

use the dns public
http://ec2-3-94-191-149.compute-1.amazonaws.com/


--
Deployment groups
 Launch More Like this
     Edit Instances details - 4 instance
      Advance Details
 	 #/bin/bash
  	sudo yum update -y
	sudo yum install -y ruby wget
	wget https://aws-codedeploy-us-east-1.s3.us-east-1.amazonaws.com/latest/install
	chmod +x ./install
	sudo ./install auto
	sudo service codedeploy-agent status

Tag 3 instance
Environment     Production
Tag 2 instances
Environment	Development

Create Deployment Group
 DeploymentInstancesProduction


