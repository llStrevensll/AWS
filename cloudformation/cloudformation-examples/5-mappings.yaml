Parameters:
  EnvironmentType:
    Description: Environment Name
    Type: String
    AllowedValues: [production, development]   #valores permitidos
    ConstraintDescription: only can be development or production  

Mappings:
  RegionMap: 
    us-east-1:
      HVM64: ami-0ff8a91507f77f867
      HVMG2: ami-0a584ac55a7631c0c
    us-west-1:
      HVM64: ami-0bdb828fd58c52235
      HVMG2: ami-066ee5fd4a9ef77f1
    eu-west-1:
      HVM64: ami-047bb4163c506cd98
      HVMG2: ami-0a7c483d527806435
    ap-northeast-1:
      HVM64: ami-06cd52961ce9f0d85
      HVMG2: ami-053cdd503598e4a9d
    ap-southeast-1:
      HVM64: ami-08569b978cc4dfa10
      HVMG2: ami-0be9df32ae9f92309
  InstanceTypeEnvironment:
    production:
      instanceType: t2.small
    development:
      instanceType: t2.micro

Resources:
  MyEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", HVM64]
      InstanceType: !FindInMap [InstanceTypeEnvironment, !Ref 'EnvironmentType', instanceType]
    DependsOn: MyDB #create ec2 instance Depending on whether the DB has been successfully created - 

  # MyDB:
  #   Type: AWS::RDS::DBInstance
  #   Properties:
  #     AllocatedStorage: '5'
  #     DBInstanceClass: db.t2.small
  #     Engine: MySQL
  #     EngineVersion: "5.7.22"
  #     MasterUsername: MyName
  #     MasterUserPassword: MyPassword
  #   # Added a DeletionPolicy
  #   # This ensures that the RDS DBInstance does not create a snapshot when it's deleted
  #   # Otherwise, you would be billed for the snapshot
  #   DeletionPolicy: Delete